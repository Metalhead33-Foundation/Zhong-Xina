.deploy_template: &deploy_tpl
  image: registry.gitlab.com/gitlab-org/terraform-images/releases/1.0:v0.20.0
  tags:
    - kubernetes
    - cluster
  variables:
    TF_ROOT: ${CI_PROJECT_DIR}/infra
    TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/${CI_ENVIRONMENT_NAME}
  cache:
    key: deploy-${CI_COMMIT_REF_SLUG}
    paths:
      - ${TF_ROOT}/.terraform
  before_script:
    - cd ${TF_ROOT}
    - ./terraform-gitlab

deploy:init:
  <<: *deploy_tpl
  stage: prepare
  script:
    - gitlab-terraform init
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "development" || $CI_COMMIT_BRANCH == "development" || $CI_COMMIT_TAG =~ /^release\//'
      when: on_success

deploy:validate:
  <<: *deploy_tpl
  needs:
    - job: deploy:init
      artifacts: false
  stage: validate
  script:
    - gitlab-terraform validate
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "development" || $CI_COMMIT_BRANCH == "development" || $CI_COMMIT_TAG =~ /^release\//'
      when: on_success

deploy:plan:dev:
  <<: *deploy_tpl
  needs:
    - job: deploy:validate
      artifacts: false
    - job: app:prepare
      artifacts: true
  stage: build
  environment:
    name: development
    action: prepare
  rules:
    - if: '$CI_COMMIT_BRANCH == "development"'
      when: on_success
  script:
    - echo "bot_version = \"$VERSION\"" > bot.version.auto.tfvars
    - gitlab-terraform plan
    - gitlab-terraform plan-json
  artifacts:
    name: plan-dev
    paths:
      - ${TF_ROOT}/plan.cache
      - ${TF_ROOT}/bot.version.auto.tfvars

deploy:apply:dev:
  <<: *deploy_tpl
  needs:
    - job: deploy:plan:dev
      artifacts: true
    - job: app:build
      artifacts: false
  stage: deploy
  environment:
    name: development
    on_stop: deploy:stop:dev
  script:
    - gitlab-terraform apply
  rules:
    - if: '$CI_COMMIT_BRANCH == "development"'
      when: on_success

deploy:stop:dev:
  <<: *deploy_tpl
  needs:
    - job: deploy:apply:dev
      artifacts: false
  stage: destroy
  script:
    - gitlab-terraform init
    - gitlab-terraform destroy -auto-approve
  environment:
    name: development
    action: stop
  rules:
    - if: '$CI_COMMIT_BRANCH == "development"'
      when: manual